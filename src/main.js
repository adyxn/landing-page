import * as THREE from \'three\';\nimport { gsap } from \'gsap\';\n\n// Fetch config data\nfetch(\'/api/config\')\n    .then(response => response.json())\n    .then(config => {\n        // Populate personal info\n        document.getElementById(\'name\').textContent = config.personal.name;\n        document.getElementById(\'title\').textContent = config.personal.title;\n        document.getElementById(\'bio\').textContent = config.personal.bio;\n        const emailLink = document.getElementById(\'email\');\n        emailLink.href = `mailto:${config.personal.email}`;\n        emailLink.textContent = config.personal.email;\n\n        // Populate social links\n        const socialLinks = document.getElementById(\'social-links\');\n        for (const [key, value] of Object.entries(config.personal.social)) {\n            const link = document.createElement(\'a\');\n            link.href = value;\n            link.textContent = key;\n            socialLinks.appendChild(link);\n        }\n\n        // Populate projects\n        const projectGrid = document.getElementById(\'project-grid\');\n        config.projects.forEach(project => {\n            const projectCard = document.createElement(\'div\');\n            projectCard.className = \'card\';\n            projectCard.innerHTML = `\n                <img src=\"${project.image}\" alt=\"${project.title}\">\n                <div class=\"card-content\">\n                    <h3>${project.title}</h3>\n                    <p>${project.description}</p>\n                </div>\n            `;\n            projectGrid.appendChild(projectCard);\n        });\n    });\n\n// Three.js setup\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\'#bg\'),\n});\n\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncamera.position.setZ(30);\n\nconst geometry = new THREE.TorusGeometry(10, 3, 16, 100);\nconst material = new THREE.MeshStandardMaterial({ color: 0xff6347 });\nconst torus = new THREE.Mesh(geometry, material);\n\nscene.add(torus);\n\nconst pointLight = new THREE.PointLight(0xffffff);\npointLight.position.set(5, 5, 5);\n\nconst ambientLight = new THREE.AmbientLight(0xffffff);\nscene.add(pointLight, ambientLight);\n\nfunction animate() {\n    requestAnimationFrame(animate);\n\n    torus.rotation.x += 0.01;\n    torus.rotation.y += 0.005;\n    torus.rotation.z += 0.01;\n\n    renderer.render(scene, camera);\n}\n\nanimate();\n